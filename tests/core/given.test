#! /bin/sh
# -*- coding: utf-8 -*-
# Copyright (C) 2021, 2022, 2023 Laboratoire de Recherche et DÃ©veloppement de
# l'Epita (LRDE).
#
# This file is part of Spot, a model checking library.
#
# Spot is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Spot is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. ./defs || exit 1

set -e

ltl2tgba 'p | (!p & G(Fq & F!q & Fa))' >in
test '3 3' = "`autfilt in --stats='%s %a'`"
for i in minato all; do
    test '2 3' = \
         "`autfilt --given-fo='F(Gq|G!q)' --given-s=$i in --stats='%s %a'`"
done
res=`autfilt --given-fo='F(Gq|G!q)' --given-s=minato in --small --stats='%s %a'`
test '2 0' = "$res"


ltl2tgba 'p | (!p & G(Fq & F!q & Fa))' >in
while read opt exp; do
    res=`autfilt --given-fo=Gp in --given-s=$opt --stats='%s %e %a'`
    test "$res" = "$exp"
done <<EOF
none 3 7 3
minato 2 2 3
stutter 2 2 3
all 2 2 3
EOF

while read opt exp; do
    res=`autfilt --given-fo=Gp in --given-s=$opt --small --stats='%s %e %x'`
    test "$res" = "$exp"
done <<EOF
none 1 1 1
minato 1 1 0
stutter 1 1 1
all 1 1 0
EOF

for opt in minato all; do
    res=`ltl2tgba GFp |
         autfilt --given-s=$opt --given-fo='G!p' --small --stats=%s%e%x`
    test "$res" = 100
done

ltl2tgba 'F(!p0 | X!p1)' >in
while read opt exp; do
    res=`autfilt --given-fo='p0 & p1' in --given-s=$opt \
                 --small --stats='%s %e %x'`
    test "$res" = "$exp"
done <<EOF
none 3 4 2
minato 3 4 2
stutter 3 4 2
all 2 3 2
EOF


while read opt exp; do
    res=`autfilt --given-fo='p0' --given-fo='p1' \
         --given-s=$opt --small --stats='%s %e %x' in`
    test "$res" = "$exp"
done <<EOF
none 3 4 2
minato 3 4 2
stutter 3 4 2
all 3 4 2
EOF

# We could hope for a better reduction on this case
while read opt exp; do
    res=`autfilt --given-fo='p0' --given-fo='p1' \
         --given-s=$opt --given-fixpoint --small --stats='%s %e %x' in`
    test "$res" = "$exp"
done <<EOF
none 3 4 2
minato 3 4 2
stutter 3 4 2
all 3 4 2
EOF

# Test case from Yann's 2022-03-29 email.
ltl2tgba 'p0&p1&p2&XXGp2' >in
autfilt --given-formula=p0 --given-formula=p1 --given-formula=p2 --small in >out
ltl2tgba 'XXGp2' >ref
autfilt -q --equivalent-to=ref out


# This test-case, sent by Yann Thierry-Mieg caused a segfault
# in sbacc() because of false transitions introduced by given.
cat >in.hoa <<EOF
HOA: v1 name: "Formula" States: 7 Start: 0 AP: 2
"p18" "p19" acc-name: Buchi Acceptance: 1 Inf(0) properties:
trans-labels explicit-labels trans-acc no-univ-branch very-weak weak
inherently-weak --BODY-- State: 0 [(0|1)] 1 [!(0)&!(1)] 2 State: 1 [t]
1 {0} State: 2 [(0|1)] 1 [!(0)&!(1)] 3 State: 3 [(0|1)] 1 [!(0)&!(1)]
4 [!(0)&!(1)] 5 [!(0)&!(1)] 6 State: 4 [!(0)] 4 {0} State: 5 [!(1)] 5
{0} State: 6 [!(0)] 4 [!(1)] 5 [t] 6 --END--
EOF
autfilt --check=stutter --small \
        --given-formula='!p18&&!p19' \
        --given-formula='X!(p18&&p19)' \
        --given-formula='X!(!p18&&p19)' \
        --given-formula='X!(p18&&!p19)' \
        --given-formula='X(!p18&&!p19)' \
        --given-formula='XX!(p18&&p19)' \
        --given-formula='XX!(!p18&&p19)' \
        --given-formula='XX!(p18&&!p19)' \
        --given-formula='XX(!p18&&!p19)' \
        in.hoa --given-strategy=stutter >out
cat >expected<<EOF
HOA: v1
States: 6
Start: 0
AP: 2 "p18" "p19"
acc-name: Buchi
Acceptance: 1 Inf(0)
properties: trans-labels explicit-labels state-acc stutter-sensitive
properties: very-weak
--BODY--
State: 0
[!0&!1] 1
State: 1
[!0&!1] 2
State: 2
[!0&!1] 3
[!0&!1] 4
[!0&!1] 5
State: 3 {0}
[!0] 3
State: 4 {0}
[!1] 4
State: 5
[!0] 3
[!1] 4
[t] 5
--END--
EOF
diff out expected
